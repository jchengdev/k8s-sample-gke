import * as React from 'react';

import CssBaseline from '@mui/material/CssBaseline';
import { Global } from '@emotion/react';
import Toolbar from '@mui/material/Toolbar';
import Typography from '@mui/material/Typography';
import AddToPhotos from '@mui/icons-material/AddToPhotos';

import Link from '@/common/components/Link';

// import PaletteMetaForm from './PaletteMetaForm';

import {
  StyledAppBar,
  StyledButton,
  StyledIconButton,
  StyledNavBtns,
  StyledRoot,
} from './PaletteFormNav.styles';

interface PaletteFormNavProps {
  open: boolean;
  handleDrawerOpen: () => void;
  palettes: PaletteI[];
  handleSubmit: (partialNewPalette: {
    paletteName: string;
    emoji: string;
  }) => void;
}

const PaletteFormNav: React.FC<PaletteFormNavProps> = props => {
  const { open, handleDrawerOpen, palettes, handleSubmit } = props;

  const [formShowing, setFormShowing] = React.useState(false as boolean);

  const _showForm = () => {
    setFormShowing(true);
  };
  const _hideForm = () => {
    setFormShowing(false);
  };

  return (
    <StyledRoot>
      <CssBaseline />
      <Global
        styles={{
          'body div': {
            lineHeight: '0', // overrides default line-height: 1.5 generated by <CssBaseline />
          },
        }}
      />
      <StyledAppBar position="fixed" color="default" sxProps={{ open }}>
        <Toolbar>
          <StyledIconButton
            color="inherit"
            aria-label="open drawer"
            onClick={handleDrawerOpen}
            edge="start"
            sxProps={{ open }}
          >
            <AddToPhotos />
          </StyledIconButton>
          <Typography variant="h6" noWrap component="div">
            Create A Palette
          </Typography>
        </Toolbar>
        <StyledNavBtns>
          <Link href={'/'}>
            <StyledButton variant="contained" color="secondary">
              Go Back
            </StyledButton>
          </Link>
          <StyledButton variant="contained" onClick={_showForm}>
            Save
          </StyledButton>
        </StyledNavBtns>
      </StyledAppBar>
      {formShowing && (
        // <PaletteMetaForm
        //   hideForm={_hideForm}
        //   palettes={palettes}
        //   handleSubmit={handleSubmit}
        // />
        <></>
      )}
    </StyledRoot>
  );
};

export default PaletteFormNav;
